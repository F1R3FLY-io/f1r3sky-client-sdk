/* tslint:disable */
/* eslint-disable */
/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequestStatus } from './RequestStatus';
import {
    RequestStatusFromJSON,
    RequestStatusFromJSONTyped,
    RequestStatusToJSON,
    RequestStatusToJSONTyped,
} from './RequestStatus';

/**
 * 
 * @export
 * @interface Request
 */
export interface Request {
    /**
     * 
     * @type {string}
     * @memberof Request
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof Request
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof Request
     */
    amount: number;
    /**
     * 
     * @type {RequestStatus}
     * @memberof Request
     */
    status: RequestStatus;
}



/**
 * Check if a given object implements the Request interface.
 */
export function instanceOfRequest(value: object): value is Request {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function RequestFromJSON(json: any): Request {
    return RequestFromJSONTyped(json, false);
}

export function RequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): Request {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'date': (new Date(json['date'])),
        'amount': json['amount'],
        'status': RequestStatusFromJSON(json['status']),
    };
}

export function RequestToJSON(json: any): Request {
    return RequestToJSONTyped(json, false);
}

export function RequestToJSONTyped(value?: Request | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'date': ((value['date']).toISOString()),
        'amount': value['amount'],
        'status': RequestStatusToJSON(value['status']),
    };
}

