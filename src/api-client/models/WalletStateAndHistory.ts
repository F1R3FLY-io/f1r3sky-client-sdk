/* tslint:disable */
/* eslint-disable */
/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Boost } from './Boost';
import {
    BoostFromJSON,
    BoostFromJSONTyped,
    BoostToJSON,
    BoostToJSONTyped,
} from './Boost';
import type { Request } from './Request';
import {
    RequestFromJSON,
    RequestFromJSONTyped,
    RequestToJSON,
    RequestToJSONTyped,
} from './Request';
import type { Transfer } from './Transfer';
import {
    TransferFromJSON,
    TransferFromJSONTyped,
    TransferToJSON,
    TransferToJSONTyped,
} from './Transfer';

/**
 * 
 * @export
 * @interface WalletStateAndHistory
 */
export interface WalletStateAndHistory {
    /**
     * 
     * @type {number}
     * @memberof WalletStateAndHistory
     */
    balance: number;
    /**
     * 
     * @type {Array<Request>}
     * @memberof WalletStateAndHistory
     */
    requests: Array<Request>;
    /**
     * 
     * @type {Array<object>}
     * @memberof WalletStateAndHistory
     */
    exchanges: Array<object>;
    /**
     * 
     * @type {Array<Boost>}
     * @memberof WalletStateAndHistory
     */
    boosts: Array<Boost>;
    /**
     * 
     * @type {Array<Transfer>}
     * @memberof WalletStateAndHistory
     */
    transfers: Array<Transfer>;
}

/**
 * Check if a given object implements the WalletStateAndHistory interface.
 */
export function instanceOfWalletStateAndHistory(value: object): value is WalletStateAndHistory {
    if (!('balance' in value) || value['balance'] === undefined) return false;
    if (!('requests' in value) || value['requests'] === undefined) return false;
    if (!('exchanges' in value) || value['exchanges'] === undefined) return false;
    if (!('boosts' in value) || value['boosts'] === undefined) return false;
    if (!('transfers' in value) || value['transfers'] === undefined) return false;
    return true;
}

export function WalletStateAndHistoryFromJSON(json: any): WalletStateAndHistory {
    return WalletStateAndHistoryFromJSONTyped(json, false);
}

export function WalletStateAndHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletStateAndHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'balance': json['balance'],
        'requests': ((json['requests'] as Array<any>).map(RequestFromJSON)),
        'exchanges': json['exchanges'],
        'boosts': ((json['boosts'] as Array<any>).map(BoostFromJSON)),
        'transfers': ((json['transfers'] as Array<any>).map(TransferFromJSON)),
    };
}

export function WalletStateAndHistoryToJSON(json: any): WalletStateAndHistory {
    return WalletStateAndHistoryToJSONTyped(json, false);
}

export function WalletStateAndHistoryToJSONTyped(value?: WalletStateAndHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'balance': value['balance'],
        'requests': ((value['requests'] as Array<any>).map(RequestToJSON)),
        'exchanges': value['exchanges'],
        'boosts': ((value['boosts'] as Array<any>).map(BoostToJSON)),
        'transfers': ((value['transfers'] as Array<any>).map(TransferToJSON)),
    };
}

