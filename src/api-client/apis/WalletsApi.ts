/* tslint:disable */
/* eslint-disable */
/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SignedContract,
  TransferReq,
  TransferResp,
  WalletStateAndHistory,
} from '../models/index';
import {
    SignedContractFromJSON,
    SignedContractToJSON,
    TransferReqFromJSON,
    TransferReqToJSON,
    TransferRespFromJSON,
    TransferRespToJSON,
    WalletStateAndHistoryFromJSON,
    WalletStateAndHistoryToJSON,
} from '../models/index';

export interface ApiWalletsAddressStateGetRequest {
    address: string;
}

export interface ApiWalletsTransferPreparePostRequest {
    transferReq: TransferReq;
}

export interface ApiWalletsTransferSendPostRequest {
    signedContract: SignedContract;
}

/**
 * 
 */
export class WalletsApi extends runtime.BaseAPI {

    /**
     */
    async apiWalletsAddressStateGetRaw(requestParameters: ApiWalletsAddressStateGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WalletStateAndHistory>> {
        if (requestParameters['address'] == null) {
            throw new runtime.RequiredError(
                'address',
                'Required parameter "address" was null or undefined when calling apiWalletsAddressStateGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/wallets/{address}/state`;
        urlPath = urlPath.replace(`{${"address"}}`, encodeURIComponent(String(requestParameters['address'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WalletStateAndHistoryFromJSON(jsonValue));
    }

    /**
     */
    async apiWalletsAddressStateGet(requestParameters: ApiWalletsAddressStateGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WalletStateAndHistory> {
        const response = await this.apiWalletsAddressStateGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiWalletsTransferPreparePostRaw(requestParameters: ApiWalletsTransferPreparePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TransferResp>> {
        if (requestParameters['transferReq'] == null) {
            throw new runtime.RequiredError(
                'transferReq',
                'Required parameter "transferReq" was null or undefined when calling apiWalletsTransferPreparePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json; charset=utf-8';


        let urlPath = `/api/wallets/transfer/prepare`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TransferReqToJSON(requestParameters['transferReq']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TransferRespFromJSON(jsonValue));
    }

    /**
     */
    async apiWalletsTransferPreparePost(requestParameters: ApiWalletsTransferPreparePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TransferResp> {
        const response = await this.apiWalletsTransferPreparePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiWalletsTransferSendPostRaw(requestParameters: ApiWalletsTransferSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['signedContract'] == null) {
            throw new runtime.RequiredError(
                'signedContract',
                'Required parameter "signedContract" was null or undefined when calling apiWalletsTransferSendPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json; charset=utf-8';


        let urlPath = `/api/wallets/transfer/send`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SignedContractToJSON(requestParameters['signedContract']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiWalletsTransferSendPost(requestParameters: ApiWalletsTransferSendPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiWalletsTransferSendPostRaw(requestParameters, initOverrides);
    }

}
