/* tslint:disable */
/* eslint-disable */
/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Log } from './Log';
import {
    LogFromJSON,
    LogFromJSONTyped,
    LogToJSON,
    LogToJSONTyped,
} from './Log';
import type { SignedTestDeplotError } from './SignedTestDeplotError';
import {
    SignedTestDeplotErrorFromJSON,
    SignedTestDeplotErrorFromJSONTyped,
    SignedTestDeplotErrorToJSON,
    SignedTestDeplotErrorToJSONTyped,
} from './SignedTestDeplotError';
import type { SignedTestDeplotLogs } from './SignedTestDeplotLogs';
import {
    SignedTestDeplotLogsFromJSON,
    SignedTestDeplotLogsFromJSONTyped,
    SignedTestDeplotLogsToJSON,
    SignedTestDeplotLogsToJSONTyped,
} from './SignedTestDeplotLogs';

/**
 * 
 * @export
 * @interface DeploySignedTestResp
 */
export interface DeploySignedTestResp {
    /**
     * 
     * @type {string}
     * @memberof DeploySignedTestResp
     */
    error: string;
    /**
     * 
     * @type {Array<Log>}
     * @memberof DeploySignedTestResp
     */
    logs: Array<Log>;
}

/**
 * Check if a given object implements the DeploySignedTestResp interface.
 */
export function instanceOfDeploySignedTestResp(value: object): value is DeploySignedTestResp {
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('logs' in value) || value['logs'] === undefined) return false;
    return true;
}

export function DeploySignedTestRespFromJSON(json: any): DeploySignedTestResp {
    return DeploySignedTestRespFromJSONTyped(json, false);
}

export function DeploySignedTestRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeploySignedTestResp {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'],
        'logs': ((json['logs'] as Array<any>).map(LogFromJSON)),
    };
}

export function DeploySignedTestRespToJSON(json: any): DeploySignedTestResp {
    return DeploySignedTestRespToJSONTyped(json, false);
}

export function DeploySignedTestRespToJSONTyped(value?: DeploySignedTestResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'logs': ((value['logs'] as Array<any>).map(LogToJSON)),
    };
}

