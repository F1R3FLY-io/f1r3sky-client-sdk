/*
 * Embers API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.71
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EmbersApi);
  }
}(this, function(expect, EmbersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EmbersApi.AIAgentsApi();
  });

  describe('(package)', function() {
    describe('AIAgentsApi', function() {
      describe('apiAiAgentsAddressGet', function() {
        it('should call apiAiAgentsAddressGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsAddressGet call and complete the assertions
          /*

          instance.apiAiAgentsAddressGet(address, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.Agents);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsAddressIdVersionDeployPreparePost', function() {
        it('should call apiAiAgentsAddressIdVersionDeployPreparePost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsAddressIdVersionDeployPreparePost call and complete the assertions
          /*

          instance.apiAiAgentsAddressIdVersionDeployPreparePost(address, id, version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.DeployAgentResp);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsAddressIdVersionDeploySendPost', function() {
        it('should call apiAiAgentsAddressIdVersionDeploySendPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsAddressIdVersionDeploySendPost call
          /*

          instance.apiAiAgentsAddressIdVersionDeploySendPost(body, address, id, version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsAddressIdVersionGet', function() {
        it('should call apiAiAgentsAddressIdVersionGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsAddressIdVersionGet call and complete the assertions
          /*

          instance.apiAiAgentsAddressIdVersionGet(address, id, version, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.Agent);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsAddressIdVersionsGet', function() {
        it('should call apiAiAgentsAddressIdVersionsGet successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsAddressIdVersionsGet call and complete the assertions
          /*

          instance.apiAiAgentsAddressIdVersionsGet(address, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.Agents);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsCreatePreparePost', function() {
        it('should call apiAiAgentsCreatePreparePost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsCreatePreparePost call and complete the assertions
          /*

          instance.apiAiAgentsCreatePreparePost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.CreateAgentResp);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsCreateSendPost', function() {
        it('should call apiAiAgentsCreateSendPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsCreateSendPost call
          /*

          instance.apiAiAgentsCreateSendPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsIdSavePreparePost', function() {
        it('should call apiAiAgentsIdSavePreparePost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsIdSavePreparePost call and complete the assertions
          /*

          instance.apiAiAgentsIdSavePreparePost(body, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.SaveAgentResp);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsIdSaveSendPost', function() {
        it('should call apiAiAgentsIdSaveSendPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsIdSaveSendPost call
          /*

          instance.apiAiAgentsIdSaveSendPost(body, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsTestDeployPreparePost', function() {
        it('should call apiAiAgentsTestDeployPreparePost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsTestDeployPreparePost call and complete the assertions
          /*

          instance.apiAiAgentsTestDeployPreparePost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.DeployTestResp);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsTestDeploySendPost', function() {
        it('should call apiAiAgentsTestDeploySendPost successfully', function(done) {
          // TODO: uncomment, update parameter values for apiAiAgentsTestDeploySendPost call and complete the assertions
          /*

          instance.apiAiAgentsTestDeploySendPost(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.DeploySignedTestResp);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('apiAiAgentsTestWalletPost', function() {
        it('should call apiAiAgentsTestWalletPost successfully', function(done) {
          // TODO: uncomment apiAiAgentsTestWalletPost call and complete the assertions
          /*

          instance.apiAiAgentsTestWalletPost(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(EmbersApi.CreateTestwalletResp);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
